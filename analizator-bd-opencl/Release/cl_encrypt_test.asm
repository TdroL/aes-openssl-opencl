; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\tdrol\documents\visual studio 2010\Projects\analizator\analizator-bd-opencl\cl_encrypt_test.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?test_data@@3PAUEncrypt_Data@@A			; test_data
PUBLIC	??_C@_0BC@GEOOPMIG@Test?3?5cl_encrypt?6?$AA@	; `string'
PUBLIC	??_C@_0BK@JMDGINJF@Info?3?5release?5old?5kernel?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@BGJGIKJE@aes_encrypt_128?$AA@		; `string'
PUBLIC	??_C@_0BA@IEEAEIPL@aes_encrypt_196?$AA@		; `string'
PUBLIC	??_C@_0BA@JPOPBOHB@aes_encrypt_256?$AA@		; `string'
PUBLIC	??_C@_0BF@GAIPIOBG@?5?5?$CD?$CFi?5?$CI?$CFu?5bit?$CJ?5pass?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@JNNODMCG@?5?5?$CD?$CFi?5?$CI?$CFu?5bit?$CJ?5fail?6?$AA@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JNNODMCG@?5?5?$CD?$CFi?5?$CI?$CFu?5bit?$CJ?5fail?6?$AA@
CONST	SEGMENT
??_C@_0BF@JNNODMCG@?5?5?$CD?$CFi?5?$CI?$CFu?5bit?$CJ?5fail?6?$AA@ DB '  #'
	DB	'%i (%u bit) fail', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GAIPIOBG@?5?5?$CD?$CFi?5?$CI?$CFu?5bit?$CJ?5pass?6?$AA@
CONST	SEGMENT
??_C@_0BF@GAIPIOBG@?5?5?$CD?$CFi?5?$CI?$CFu?5bit?$CJ?5pass?6?$AA@ DB '  #'
	DB	'%i (%u bit) pass', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JPOPBOHB@aes_encrypt_256?$AA@
CONST	SEGMENT
??_C@_0BA@JPOPBOHB@aes_encrypt_256?$AA@ DB 'aes_encrypt_256', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IEEAEIPL@aes_encrypt_196?$AA@
CONST	SEGMENT
??_C@_0BA@IEEAEIPL@aes_encrypt_196?$AA@ DB 'aes_encrypt_196', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BGJGIKJE@aes_encrypt_128?$AA@
CONST	SEGMENT
??_C@_0BA@BGJGIKJE@aes_encrypt_128?$AA@ DB 'aes_encrypt_128', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JMDGINJF@Info?3?5release?5old?5kernel?6?$AA@
CONST	SEGMENT
??_C@_0BK@JMDGINJF@Info?3?5release?5old?5kernel?6?$AA@ DB 'Info: release '
	DB	'old kernel', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GEOOPMIG@Test?3?5cl_encrypt?6?$AA@
CONST	SEGMENT
??_C@_0BC@GEOOPMIG@Test?3?5cl_encrypt?6?$AA@ DB 'Test: cl_encrypt', 0aH, 00H ; `string'
_test_data_size DD 06H
?test_data@@3PAUEncrypt_Data@@A DD 020H			; test_data
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0dcH
	DB	095H
	DB	0c0H
	DB	078H
	DB	0a2H
	DB	040H
	DB	089H
	DB	089H
	DB	0adH
	DB	048H
	DB	0a2H
	DB	014H
	DB	092H
	DB	084H
	DB	020H
	DB	087H
	DB	0dcH
	DB	095H
	DB	0c0H
	DB	078H
	DB	0a2H
	DB	040H
	DB	089H
	DB	089H
	DB	0adH
	DB	048H
	DB	0a2H
	DB	014H
	DB	092H
	DB	084H
	DB	020H
	DB	087H
	DB	0dcH
	DB	095H
	DB	0c0H
	DB	078H
	DB	0a2H
	DB	040H
	DB	089H
	DB	089H
	DB	0adH
	DB	048H
	DB	0a2H
	DB	014H
	DB	092H
	DB	084H
	DB	020H
	DB	087H
	DB	0dcH
	DB	095H
	DB	0c0H
	DB	078H
	DB	0a2H
	DB	040H
	DB	089H
	DB	089H
	DB	0adH
	DB	048H
	DB	0a2H
	DB	014H
	DB	092H
	DB	084H
	DB	020H
	DB	087H
	DB	0dcH
	DB	095H
	DB	0c0H
	DB	078H
	DB	0a2H
	DB	040H
	DB	089H
	DB	089H
	DB	0adH
	DB	048H
	DB	0a2H
	DB	014H
	DB	092H
	DB	084H
	DB	020H
	DB	087H
	DB	0dcH
	DB	095H
	DB	0c0H
	DB	078H
	DB	0a2H
	DB	040H
	DB	089H
	DB	089H
	DB	0adH
	DB	048H
	DB	0a2H
	DB	014H
	DB	092H
	DB	084H
	DB	020H
	DB	087H
	DB	0dcH
	DB	095H
	DB	0c0H
	DB	078H
	DB	0a2H
	DB	040H
	DB	089H
	DB	089H
	DB	0adH
	DB	048H
	DB	0a2H
	DB	014H
	DB	092H
	DB	084H
	DB	020H
	DB	087H
	DB	0dcH
	DB	095H
	DB	0c0H
	DB	078H
	DB	0a2H
	DB	040H
	DB	089H
	DB	089H
	DB	0adH
	DB	048H
	DB	0a2H
	DB	014H
	DB	092H
	DB	084H
	DB	020H
	DB	087H
	DD	020H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04bH
	DB	0f8H
	DB	05fH
	DB	01bH
	DB	05dH
	DB	054H
	DB	0adH
	DB	0bcH
	DB	030H
	DB	07bH
	DB	0aH
	DB	04H
	DB	083H
	DB	089H
	DB	0adH
	DB	0cbH
	DB	04bH
	DB	0f8H
	DB	05fH
	DB	01bH
	DB	05dH
	DB	054H
	DB	0adH
	DB	0bcH
	DB	030H
	DB	07bH
	DB	0aH
	DB	04H
	DB	083H
	DB	089H
	DB	0adH
	DB	0cbH
	DB	04bH
	DB	0f8H
	DB	05fH
	DB	01bH
	DB	05dH
	DB	054H
	DB	0adH
	DB	0bcH
	DB	030H
	DB	07bH
	DB	0aH
	DB	04H
	DB	083H
	DB	089H
	DB	0adH
	DB	0cbH
	DB	04bH
	DB	0f8H
	DB	05fH
	DB	01bH
	DB	05dH
	DB	054H
	DB	0adH
	DB	0bcH
	DB	030H
	DB	07bH
	DB	0aH
	DB	04H
	DB	083H
	DB	089H
	DB	0adH
	DB	0cbH
	DB	04bH
	DB	0f8H
	DB	05fH
	DB	01bH
	DB	05dH
	DB	054H
	DB	0adH
	DB	0bcH
	DB	030H
	DB	07bH
	DB	0aH
	DB	04H
	DB	083H
	DB	089H
	DB	0adH
	DB	0cbH
	DB	04bH
	DB	0f8H
	DB	05fH
	DB	01bH
	DB	05dH
	DB	054H
	DB	0adH
	DB	0bcH
	DB	030H
	DB	07bH
	DB	0aH
	DB	04H
	DB	083H
	DB	089H
	DB	0adH
	DB	0cbH
	DB	04bH
	DB	0f8H
	DB	05fH
	DB	01bH
	DB	05dH
	DB	054H
	DB	0adH
	DB	0bcH
	DB	030H
	DB	07bH
	DB	0aH
	DB	04H
	DB	083H
	DB	089H
	DB	0adH
	DB	0cbH
	DB	04bH
	DB	0f8H
	DB	05fH
	DB	01bH
	DB	05dH
	DB	054H
	DB	0adH
	DB	0bcH
	DB	030H
	DB	07bH
	DB	0aH
	DB	04H
	DB	083H
	DB	089H
	DB	0adH
	DB	0cbH
	DD	020H
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	01aH
	DB	01bH
	DB	01cH
	DB	01dH
	DB	01eH
	DB	01fH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0f2H
	DB	090H
	DB	00H
	DB	0b6H
	DB	02aH
	DB	049H
	DB	09fH
	DB	0d0H
	DB	0a9H
	DB	0f3H
	DB	09aH
	DB	06aH
	DB	0ddH
	DB	02eH
	DB	077H
	DB	080H
	DB	0f2H
	DB	090H
	DB	00H
	DB	0b6H
	DB	02aH
	DB	049H
	DB	09fH
	DB	0d0H
	DB	0a9H
	DB	0f3H
	DB	09aH
	DB	06aH
	DB	0ddH
	DB	02eH
	DB	077H
	DB	080H
	DB	0f2H
	DB	090H
	DB	00H
	DB	0b6H
	DB	02aH
	DB	049H
	DB	09fH
	DB	0d0H
	DB	0a9H
	DB	0f3H
	DB	09aH
	DB	06aH
	DB	0ddH
	DB	02eH
	DB	077H
	DB	080H
	DB	0f2H
	DB	090H
	DB	00H
	DB	0b6H
	DB	02aH
	DB	049H
	DB	09fH
	DB	0d0H
	DB	0a9H
	DB	0f3H
	DB	09aH
	DB	06aH
	DB	0ddH
	DB	02eH
	DB	077H
	DB	080H
	DB	0f2H
	DB	090H
	DB	00H
	DB	0b6H
	DB	02aH
	DB	049H
	DB	09fH
	DB	0d0H
	DB	0a9H
	DB	0f3H
	DB	09aH
	DB	06aH
	DB	0ddH
	DB	02eH
	DB	077H
	DB	080H
	DB	0f2H
	DB	090H
	DB	00H
	DB	0b6H
	DB	02aH
	DB	049H
	DB	09fH
	DB	0d0H
	DB	0a9H
	DB	0f3H
	DB	09aH
	DB	06aH
	DB	0ddH
	DB	02eH
	DB	077H
	DB	080H
	DB	0f2H
	DB	090H
	DB	00H
	DB	0b6H
	DB	02aH
	DB	049H
	DB	09fH
	DB	0d0H
	DB	0a9H
	DB	0f3H
	DB	09aH
	DB	06aH
	DB	0ddH
	DB	02eH
	DB	077H
	DB	080H
	DB	0f2H
	DB	090H
	DB	00H
	DB	0b6H
	DB	02aH
	DB	049H
	DB	09fH
	DB	0d0H
	DB	0a9H
	DB	0f3H
	DB	09aH
	DB	06aH
	DB	0ddH
	DB	02eH
	DB	077H
	DB	080H
	DD	020H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	01aH
	DB	01bH
	DB	01cH
	DB	01dH
	DB	01eH
	DB	01fH
	DB	020H
	DB	021H
	DB	022H
	DB	023H
	DB	024H
	DB	025H
	DB	026H
	DB	027H
	DB	028H
	DB	029H
	DB	02aH
	DB	02bH
	DB	02cH
	DB	02dH
	DB	02eH
	DB	02fH
	DB	030H
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	039H
	DB	03aH
	DB	03bH
	DB	03cH
	DB	03dH
	DB	03eH
	DB	03fH
	DB	040H
	DB	041H
	DB	042H
	DB	043H
	DB	044H
	DB	045H
	DB	046H
	DB	047H
	DB	048H
	DB	049H
	DB	04aH
	DB	04bH
	DB	04cH
	DB	04dH
	DB	04eH
	DB	04fH
	DB	050H
	DB	051H
	DB	052H
	DB	053H
	DB	054H
	DB	055H
	DB	056H
	DB	057H
	DB	058H
	DB	059H
	DB	05aH
	DB	05bH
	DB	05cH
	DB	05dH
	DB	05eH
	DB	05fH
	DB	060H
	DB	061H
	DB	062H
	DB	063H
	DB	064H
	DB	065H
	DB	066H
	DB	067H
	DB	068H
	DB	069H
	DB	06aH
	DB	06bH
	DB	06cH
	DB	06dH
	DB	06eH
	DB	06fH
	DB	070H
	DB	071H
	DB	072H
	DB	073H
	DB	074H
	DB	075H
	DB	076H
	DB	077H
	DB	078H
	DB	079H
	DB	07aH
	DB	07bH
	DB	07cH
	DB	07dH
	DB	07eH
	DB	07fH
	DB	0b6H
	DB	05dH
	DB	030H
	DB	03H
	DB	0cH
	DB	088H
	DB	0b4H
	DB	04cH
	DB	097H
	DB	05aH
	DB	034H
	DB	03fH
	DB	093H
	DB	0fbH
	DB	03cH
	DB	09H
	DB	061H
	DB	00H
	DB	066H
	DB	066H
	DB	01H
	DB	0cH
	DB	043H
	DB	037H
	DB	09eH
	DB	0deH
	DB	085H
	DB	04H
	DB	082H
	DB	013H
	DB	092H
	DB	01fH
	DB	0abH
	DB	098H
	DB	07dH
	DB	0a5H
	DB	0c8H
	DB	088H
	DB	0aH
	DB	0c6H
	DB	01cH
	DB	0e7H
	DB	0d1H
	DB	06H
	DB	090H
	DB	041H
	DB	0bbH
	DB	096H
	DB	0c5H
	DB	036H
	DB	084H
	DB	0daH
	DB	013H
	DB	0c6H
	DB	07eH
	DB	0e7H
	DB	0b7H
	DB	0cbH
	DB	068H
	DB	079H
	DB	05eH
	DB	0ecH
	DB	0acH
	DB	0e8H
	DB	076H
	DB	095H
	DB	0c5H
	DB	0abH
	DB	0e9H
	DB	06H
	DB	0dbH
	DB	0bbH
	DB	074H
	DB	04cH
	DB	0a0H
	DB	082H
	DB	06eH
	DB	060H
	DB	01dH
	DB	0ffH
	DB	0c9H
	DB	063H
	DB	047H
	DB	06H
	DB	0ffH
	DB	0e0H
	DB	044H
	DB	0b6H
	DB	071H
	DB	0e4H
	DB	0a5H
	DB	025H
	DB	04dH
	DB	0a2H
	DB	02eH
	DB	0bbH
	DB	044H
	DB	084H
	DB	0f1H
	DB	050H
	DB	086H
	DB	0beH
	DB	08H
	DB	081H
	DB	0abH
	DB	0f4H
	DB	033H
	DB	09eH
	DB	059H
	DB	035H
	DB	063H
	DB	0e2H
	DB	04aH
	DB	0dH
	DB	05fH
	DB	0f8H
	DB	0f3H
	DB	017H
	DB	0f1H
	DB	043H
	DB	01dH
	DB	08dH
	DB	06bH
	DB	016H
	DB	0eH
	DB	06bH
	DB	07eH
	DB	025H
	DD	020H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	01aH
	DB	01bH
	DB	01cH
	DB	01dH
	DB	01eH
	DB	01fH
	DB	020H
	DB	021H
	DB	022H
	DB	023H
	DB	024H
	DB	025H
	DB	026H
	DB	027H
	DB	028H
	DB	029H
	DB	02aH
	DB	02bH
	DB	02cH
	DB	02dH
	DB	02eH
	DB	02fH
	DB	030H
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	039H
	DB	03aH
	DB	03bH
	DB	03cH
	DB	03dH
	DB	03eH
	DB	03fH
	DB	040H
	DB	041H
	DB	042H
	DB	043H
	DB	044H
	DB	045H
	DB	046H
	DB	047H
	DB	048H
	DB	049H
	DB	04aH
	DB	04bH
	DB	04cH
	DB	04dH
	DB	04eH
	DB	04fH
	DB	050H
	DB	051H
	DB	052H
	DB	053H
	DB	054H
	DB	055H
	DB	056H
	DB	057H
	DB	058H
	DB	059H
	DB	05aH
	DB	05bH
	DB	05cH
	DB	05dH
	DB	05eH
	DB	05fH
	DB	060H
	DB	061H
	DB	062H
	DB	063H
	DB	064H
	DB	065H
	DB	066H
	DB	067H
	DB	068H
	DB	069H
	DB	06aH
	DB	06bH
	DB	06cH
	DB	06dH
	DB	06eH
	DB	06fH
	DB	070H
	DB	071H
	DB	072H
	DB	073H
	DB	074H
	DB	075H
	DB	076H
	DB	077H
	DB	078H
	DB	079H
	DB	07aH
	DB	07bH
	DB	07cH
	DB	07dH
	DB	07eH
	DB	07fH
	DB	0cdH
	DB	057H
	DB	01dH
	DB	0c3H
	DB	01eH
	DB	042H
	DB	095H
	DB	0a7H
	DB	0b5H
	DB	0c6H
	DB	024H
	DB	0d6H
	DB	05dH
	DB	091H
	DB	04bH
	DB	0b8H
	DB	03H
	DB	05bH
	DB	092H
	DB	098H
	DB	04dH
	DB	022H
	DB	0cH
	DB	098H
	DB	063H
	DB	0a0H
	DB	087H
	DB	0bcH
	DB	0b0H
	DB	04H
	DB	051H
	DB	07eH
	DB	09aH
	DB	03dH
	DB	0fbH
	DB	0eH
	DB	074H
	DB	0abH
	DB	0fH
	DB	0dfH
	DB	06cH
	DB	068H
	DB	064H
	DB	039H
	DB	0eH
	DB	022H
	DB	0afH
	DB	096H
	DB	050H
	DB	0a0H
	DB	0c4H
	DB	034H
	DB	05H
	DB	019H
	DB	0ceH
	DB	051H
	DB	089H
	DB	03aH
	DB	0f9H
	DB	0b1H
	DB	064H
	DB	086H
	DB	09fH
	DB	0f3H
	DB	0faH
	DB	01cH
	DB	0c8H
	DB	030H
	DB	064H
	DB	0f6H
	DB	04aH
	DB	05aH
	DB	04bH
	DB	04bH
	DB	095H
	DB	028H
	DB	04cH
	DB	04dH
	DB	089H
	DB	036H
	DB	066H
	DB	071H
	DB	025H
	DB	08dH
	DB	0c7H
	DB	0dbH
	DB	0a5H
	DB	093H
	DB	062H
	DB	06eH
	DB	03eH
	DB	07bH
	DB	081H
	DB	097H
	DB	0e9H
	DB	024H
	DB	016H
	DB	041H
	DB	03aH
	DB	0bdH
	DB	027H
	DB	07cH
	DB	06eH
	DB	0fH
	DB	08eH
	DB	062H
	DB	066H
	DB	0f9H
	DB	05eH
	DB	08dH
	DB	016H
	DB	04eH
	DB	0e3H
	DB	0a8H
	DB	03H
	DB	099H
	DB	0caH
	DB	06bH
	DB	02aH
	DB	058H
	DB	0faH
	DB	018H
	DB	0bfH
	DB	039H
	DB	079H
	DB	02H
	DB	07H
	DB	08aH
	DD	020H
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	01aH
	DB	01bH
	DB	01cH
	DB	01dH
	DB	01eH
	DB	01fH
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	015H
	DB	016H
	DB	017H
	DB	018H
	DB	019H
	DB	01aH
	DB	01bH
	DB	01cH
	DB	01dH
	DB	01eH
	DB	01fH
	DB	020H
	DB	021H
	DB	022H
	DB	023H
	DB	024H
	DB	025H
	DB	026H
	DB	027H
	DB	028H
	DB	029H
	DB	02aH
	DB	02bH
	DB	02cH
	DB	02dH
	DB	02eH
	DB	02fH
	DB	030H
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	039H
	DB	03aH
	DB	03bH
	DB	03cH
	DB	03dH
	DB	03eH
	DB	03fH
	DB	040H
	DB	041H
	DB	042H
	DB	043H
	DB	044H
	DB	045H
	DB	046H
	DB	047H
	DB	048H
	DB	049H
	DB	04aH
	DB	04bH
	DB	04cH
	DB	04dH
	DB	04eH
	DB	04fH
	DB	050H
	DB	051H
	DB	052H
	DB	053H
	DB	054H
	DB	055H
	DB	056H
	DB	057H
	DB	058H
	DB	059H
	DB	05aH
	DB	05bH
	DB	05cH
	DB	05dH
	DB	05eH
	DB	05fH
	DB	060H
	DB	061H
	DB	062H
	DB	063H
	DB	064H
	DB	065H
	DB	066H
	DB	067H
	DB	068H
	DB	069H
	DB	06aH
	DB	06bH
	DB	06cH
	DB	06dH
	DB	06eH
	DB	06fH
	DB	070H
	DB	071H
	DB	072H
	DB	073H
	DB	074H
	DB	075H
	DB	076H
	DB	077H
	DB	078H
	DB	079H
	DB	07aH
	DB	07bH
	DB	07cH
	DB	07dH
	DB	07eH
	DB	07fH
	DB	05aH
	DB	06eH
	DB	04H
	DB	057H
	DB	08H
	DB	0fbH
	DB	071H
	DB	096H
	DB	0f0H
	DB	02eH
	DB	055H
	DB	03dH
	DB	02H
	DB	0c3H
	DB	0a6H
	DB	092H
	DB	0e9H
	DB	0c3H
	DB	0efH
	DB	08aH
	DB	0b2H
	DB	034H
	DB	053H
	DB	0e6H
	DB	0f0H
	DB	074H
	DB	09cH
	DB	0d6H
	DB	036H
	DB	0e7H
	DB	0a8H
	DB	08eH
	DB	061H
	DB	0a6H
	DB	093H
	DB	06eH
	DB	04eH
	DB	08fH
	DB	010H
	DB	01cH
	DB	01cH
	DB	0c1H
	DB	0f9H
	DB	093H
	DB	0b5H
	DB	042H
	DB	0a0H
	DB	0d4H
	DB	0e2H
	DB	074H
	DB	0eH
	DB	08aH
	DB	0faH
	DB	0d4H
	DB	0e4H
	DB	0d1H
	DB	05dH
	DB	0dH
	DB	066H
	DB	01bH
	DB	038H
	DB	02eH
	DB	0caH
	DB	089H
	DB	0a3H
	DB	07eH
	DB	0dfH
	DB	03fH
	DB	097H
	DB	05aH
	DB	0baH
	DB	0efH
	DB	093H
	DB	07bH
	DB	062H
	DB	0c7H
	DB	08dH
	DB	05bH
	DB	0b1H
	DB	057H
	DB	097H
	DB	04bH
	DB	041H
	DB	027H
	DB	038H
	DB	0e5H
	DB	0fH
	DB	045H
	DB	0c7H
	DB	0f9H
	DB	0dbH
	DB	025H
	DB	041H
	DB	03fH
	DB	027H
	DB	04bH
	DB	0d0H
	DB	0a2H
	DB	00H
	DB	0feH
	DB	0f4H
	DB	069H
	DB	024H
	DB	0a4H
	DB	0b8H
	DB	02dH
	DB	0ffH
	DB	0f8H
	DB	053H
	DB	08eH
	DB	0c1H
	DB	0b6H
	DB	0c7H
	DB	077H
	DB	0f1H
	DB	0a7H
	DB	055H
	DB	02dH
	DB	056H
	DB	07H
	DB	022H
	DB	0aeH
	DB	016H
	DB	05cH
	DB	04aH
	DB	05H
	DB	01eH
	DB	067H
PUBLIC	__$ArrayPad$
PUBLIC	?cl_encrypt_test@@YAXXZ				; cl_encrypt_test
; Function compile flags: /Ogtp
; File c:\users\tdrol\documents\visual studio 2010\projects\analizator\analizator-bd-opencl\cl_encrypt_test.cpp
;	COMDAT ?cl_encrypt_test@@YAXXZ
_TEXT	SEGMENT
tv312 = -152						; size = 4
tv406 = -148						; size = 4
_last_kernel$ = -144					; size = 4
tv451 = -140						; size = 4
_result$ = -136						; size = 128
__$ArrayPad$ = -4					; size = 4
?cl_encrypt_test@@YAXXZ PROC				; cl_encrypt_test, COMDAT

; 194  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 156				; 0000009cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+156], eax
	push	ebx
	push	esi
	push	edi

; 195  : 	printf("Test: cl_encrypt\n");

	push	OFFSET ??_C@_0BC@GEOOPMIG@Test?3?5cl_encrypt?6?$AA@
	call	_printf
	mov	ebx, OFFSET ?test_data@@3PAUEncrypt_Data@@A ; test_data
	lea	ecx, DWORD PTR _result$[esp+172]

; 196  : 
; 197  : 	uint8_t result[DATA_LENGTH];
; 198  : 	int last_kernel = 0;

	xor	eax, eax
	sub	ecx, ebx
	add	esp, 4
	sub	ecx, 164				; 000000a4H
	mov	DWORD PTR _last_kernel$[esp+168], eax
	mov	DWORD PTR tv312[esp+168], 1
	mov	DWORD PTR tv406[esp+168], ecx
	mov	DWORD PTR tv451[esp+168], 6
	jmp	SHORT $LN15@cl_encrypt
$LL46@cl_encrypt:

; 195  : 	printf("Test: cl_encrypt\n");

	mov	eax, DWORD PTR _last_kernel$[esp+168]
$LN15@cl_encrypt:

; 199  : 
; 200  : 	for (int i = 0; i < test_data_size; i++)
; 201  : 	{
; 202  : 		Encrypt_Data &data = test_data[i];
; 203  : 		
; 204  : 		if (last_kernel == 0 || last_kernel != data.length)

	test	eax, eax
	je	SHORT $LN45@cl_encrypt
	cmp	eax, DWORD PTR [ebx]
	je	$LN6@cl_encrypt

; 205  : 		{
; 206  : 			if (last_kernel == 0)
; 207  : 			{
; 208  : 				last_kernel = data.length;
; 209  : 			}
; 210  : 			else if (last_kernel != data.length)
; 211  : 			{
; 212  : 				cl_release_kernel();

	mov	eax, DWORD PTR _state
	test	eax, eax
	je	SHORT $LN24@cl_encrypt
	push	eax
	call	DWORD PTR __imp__clReleaseMemObject@4
	mov	DWORD PTR _state, 0
$LN24@cl_encrypt:
	mov	eax, DWORD PTR _roundkeys
	test	eax, eax
	je	SHORT $LN23@cl_encrypt
	push	eax
	call	DWORD PTR __imp__clReleaseMemObject@4
	mov	DWORD PTR _roundkeys, 0
$LN23@cl_encrypt:
	mov	eax, DWORD PTR _kernel
	test	eax, eax
	je	SHORT $LN22@cl_encrypt
	push	eax
	call	DWORD PTR __imp__clReleaseKernel@4
	mov	DWORD PTR _kernel, 0
$LN22@cl_encrypt:

; 213  : 				printf("Info: release old kernel\n");

	push	OFFSET ??_C@_0BK@JMDGINJF@Info?3?5release?5old?5kernel?6?$AA@
	call	_printf
	add	esp, 4
$LN45@cl_encrypt:

; 214  : 				last_kernel = data.length;

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _last_kernel$[esp+168], eax

; 215  : 			}
; 216  : 
; 217  : 			switch (data.length)

	cmp	eax, 16					; 00000010H
	je	SHORT $LN5@cl_encrypt
	cmp	eax, 24					; 00000018H
	je	SHORT $LN4@cl_encrypt
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN6@cl_encrypt

; 225  : 			case 32:
; 226  : 				cl_init("aes_encrypt_256", NULL, DATA_LENGTH, RKLENGTH(data.length));

	push	OFFSET ??_C@_0BA@JPOPBOHB@aes_encrypt_256?$AA@

; 227  : 				break;

	jmp	SHORT $LN49@cl_encrypt
$LN4@cl_encrypt:

; 221  : 				break;
; 222  : 			case 24:
; 223  : 				cl_init("aes_encrypt_196", NULL, DATA_LENGTH, RKLENGTH(data.length));

	push	OFFSET ??_C@_0BA@IEEAEIPL@aes_encrypt_196?$AA@

; 224  : 				break;

	jmp	SHORT $LN49@cl_encrypt
$LN5@cl_encrypt:

; 218  : 			{
; 219  : 			case 16:
; 220  : 				cl_init("aes_encrypt_128", NULL, DATA_LENGTH, RKLENGTH(data.length));

	push	OFFSET ??_C@_0BA@BGJGIKJE@aes_encrypt_128?$AA@
$LN49@cl_encrypt:
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	lea	edi, DWORD PTR [eax*4+112]
	call	?cl_init@@YAXPADPAEII@Z			; cl_init
	add	esp, 4
$LN6@cl_encrypt:

; 228  : 			}
; 229  : 		}
; 230  : 
; 231  : 		
; 232  : 		uint8_t rk[RKLENGTH(256)];
; 233  : 
; 234  : 		memcpy(rk, data.key, data.length);
; 235  : 
; 236  : 		key_schedule(rk, data.length*8);
; 237  : 
; 238  : 		memcpy(result, data.plaintext, DATA_LENGTH);
; 239  : 
; 240  : 		cl_encrypt(rk, data.length, result, DATA_LENGTH);
; 241  : 
; 242  : 		if (memcmp(result, data.ciphertext, DATA_LENGTH) == 0)

	mov	edx, DWORD PTR tv406[esp+168]
	lea	eax, DWORD PTR [ebx+164]
	lea	esi, DWORD PTR [eax-128]
	mov	ecx, 32					; 00000020H
	lea	edi, DWORD PTR _result$[esp+168]
	rep movsd
	mov	ecx, 128				; 00000080H
	npad	1
$LL19@cl_encrypt:
	mov	esi, DWORD PTR [edx+eax]
	cmp	esi, DWORD PTR [eax]
	jne	$LN2@cl_encrypt
	sub	ecx, 4
	add	eax, 4
	cmp	ecx, 4
	jae	SHORT $LL19@cl_encrypt

; 243  : 		{
; 244  : 			printf("  #%i (%u bit) pass\n", i+1, data.length);

	mov	edx, DWORD PTR [ebx]
	mov	eax, DWORD PTR tv312[esp+168]
	push	edx
	push	eax
	push	OFFSET ??_C@_0BF@GAIPIOBG@?5?5?$CD?$CFi?5?$CI?$CFu?5bit?$CJ?5pass?6?$AA@
$LN50@cl_encrypt:
	call	_printf
	sub	DWORD PTR tv406[esp+180], 292		; 00000124H
	mov	eax, 1
	add	DWORD PTR tv312[esp+180], eax
	add	esp, 12					; 0000000cH
	add	ebx, 292				; 00000124H
	sub	DWORD PTR tv451[esp+168], eax
	jne	$LL46@cl_encrypt

; 249  : 		}
; 250  : 	}
; 251  : 
; 252  : 	cl_release_all();

	mov	eax, DWORD PTR _state
	xor	esi, esi
	cmp	eax, esi
	je	SHORT $LN36@cl_encrypt
	push	eax
	call	DWORD PTR __imp__clReleaseMemObject@4
	mov	DWORD PTR _state, esi
$LN36@cl_encrypt:
	mov	eax, DWORD PTR _roundkeys
	cmp	eax, esi
	je	SHORT $LN35@cl_encrypt
	push	eax
	call	DWORD PTR __imp__clReleaseMemObject@4
	mov	DWORD PTR _roundkeys, esi
$LN35@cl_encrypt:
	mov	eax, DWORD PTR _kernel
	cmp	eax, esi
	je	SHORT $LN34@cl_encrypt
	push	eax
	call	DWORD PTR __imp__clReleaseKernel@4
	mov	DWORD PTR _kernel, esi
$LN34@cl_encrypt:
	mov	eax, DWORD PTR _program
	cmp	eax, esi
	je	SHORT $LN31@cl_encrypt
	push	eax
	call	DWORD PTR __imp__clReleaseProgram@4
	mov	DWORD PTR _program, esi
$LN31@cl_encrypt:
	mov	eax, DWORD PTR _queue
	cmp	eax, esi
	je	SHORT $LN30@cl_encrypt
	push	eax
	call	DWORD PTR __imp__clReleaseCommandQueue@4
	mov	DWORD PTR _queue, esi
$LN30@cl_encrypt:
	mov	eax, DWORD PTR _context
	cmp	eax, esi
	je	SHORT $LN29@cl_encrypt
	push	eax
	call	DWORD PTR __imp__clReleaseContext@4
	mov	DWORD PTR _context, esi
$LN29@cl_encrypt:

; 253  : 
; 254  : 	printf("\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf

; 255  : }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+172]
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@cl_encrypt:

; 245  : 		}
; 246  : 		else
; 247  : 		{
; 248  : 			printf("  #%i (%u bit) fail\n", i+1, data.length);

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR tv312[esp+168]
	push	eax
	push	ecx
	push	OFFSET ??_C@_0BF@JNNODMCG@?5?5?$CD?$CFi?5?$CI?$CFu?5bit?$CJ?5fail?6?$AA@
	jmp	$LN50@cl_encrypt
?cl_encrypt_test@@YAXXZ ENDP				; cl_encrypt_test
END
